/*
 * Copyright (C) Projective Software LLC, 2017 - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 */

buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		maven { url "https://psmvn1.projectivesoftware.com:8443/repository/iima-maven-repository-1/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('com.bmuschko:gradle-docker-plugin:3.2.9')
        classpath('gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.5.2')
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'
apply plugin: 'com.bmuschko.docker-remote-api'
apply plugin: 'com.gorylenko.gradle-git-properties'

version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    maven { url "https://psmvn1.projectivesoftware.com:8443/repository/iima-maven-repository-1/" }
}

dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.SR1"
	}
}

idea {
    project {
        languageLevel = '1.8'
    }
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

task createDockerfile(type: Dockerfile) {
    destFile = project.file('build/docker/Dockerfile')
    from 'openjdk:10-jre'
    copyFile jar.archiveName, '/' + jar.archiveName
    entryPoint 'sh', '-c', 'java ${JAVA_OPTS} --add-modules java.se.ee -jar /' + jar.archiveName
}

task syncJarFile(type: Sync) {
    dependsOn assemble
    from jar.archivePath
    into createDockerfile.destFile.parentFile
}

task buildImage(type: DockerBuildImage) {
    dependsOn createDockerfile
    inputDir = createDockerfile.destFile.parentFile
    tag = 'projective-software/' + "ps-" + jar.baseName + ':latest'
}

createDockerfile.dependsOn(syncJarFile)
buildImage.dependsOn(syncJarFile)